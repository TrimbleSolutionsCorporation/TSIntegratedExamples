<Window x:Class="SpreadsheetReinforcement.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:viewModel="clr-namespace:SpreadsheetReinforcement.ViewModel"
        xmlns:data="clr-namespace:SpreadsheetReinforcement.Data"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        MinHeight="410" MaxHeight="1280" MinWidth="650" MaxWidth="2000" Width="0" Height="0"
        Topmost="{Binding Path=TopMost, Mode=OneWay}"
        Icon="/SpreadsheetReinforcement;component/Resources/TeklaStructuresExtension.ico"
        Title="{Binding Path=Title, Mode=OneWay}">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding OnLoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <viewModel:TsLengthConverter x:Key="TsLengthConverter" />
        <viewModel:TsAreaConverter x:Key="TsAreaConverter" />
        <viewModel:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />

        <Style TargetType="{x:Type Button}" x:Key="BtnHightlightOff">
            <!--<Setter Property="Background" Value="Gray"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <TextBlock HorizontalAlignment="Left" Text="{TemplateBinding Content}"
                                   ToolTip="{TemplateBinding Content}"
                                   Height="{TemplateBinding Height}" TextWrapping="NoWrap" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="F1" Command="{Binding HelpRequestedCommand}" />
        <KeyBinding Key="F3" Command="{Binding LogRequestedCommand}" />
    </Window.InputBindings>

    <Window.DataContext>
        <viewModel:VmMainWindow />
    </Window.DataContext>

    <Grid Margin="3">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!--Save Load Settings Control-->
        <Grid Grid.Row="0" Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0" Width="80" HorizontalAlignment="Left" Content="Save"
                    Command="{Binding SaveCurrentSettingsCommand}" />

            <ComboBox Grid.Column="1"
                      ItemsSource="{Binding SavedSettingCollection, Mode=OneWay, Source={x:Static data:SavedSettingDatabase.Instance}}" 
                      DisplayMemberPath="SaveName"
                      Text="{Binding Path=SaveLoadText, Mode=TwoWay}" IsEditable="True">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="DropDownClosed">
                        <i:InvokeCommandAction Command="{Binding SelectedSavedSettingChangedCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>

            <ToggleButton Grid.Column="2" Width="23" IsChecked="{Binding Path=TopMost, Mode=TwoWay}" Padding="0">
                <DockPanel HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Image Source="/Resources/RedPin.ico" Height="16" Width="16" />
                </DockPanel>
            </ToggleButton>

            <Button Grid.Column="4" Width="23" Padding="0" Command="{Binding OpenOptionsWindowCommand}">
                <DockPanel HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Image Source="/Resources/Options.ico" Height="16" Width="16" />
                </DockPanel>
            </Button>

        </Grid>

        <!--Import settings GroupBox-->
        <GroupBox Grid.Row="1" Header="Import Settings" Margin="5">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Label Grid.Row="0" Grid.Column="0" Content="Footing Filter" />
                <ComboBox Grid.Row="0" Grid.Column="1" ItemsSource="{Binding Path=AllSelectionFilters, Mode=OneWay}"
                          Text="{Binding Path=CurrentSetting.FootingFilter, Mode=TwoWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedIndexChanged">
                            <i:InvokeCommandAction Command="{Binding UpdateValidSelectionFlagCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>

                <Label Grid.Row="1" Grid.Column="0" Content="Pile Filter" />
                <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding Path=AllSelectionFilters, Mode=OneWay}"
                          Text="{Binding Path=CurrentSetting.PillarFilter, Mode=TwoWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedIndexChanged">
                            <i:InvokeCommandAction Command="{Binding UpdateValidSelectionFlagCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>

                <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="25" />
                        <ColumnDefinition Width="25" />
                        <ColumnDefinition Width="25" />
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Content="Import File" />
                    <TextBox Grid.Column="1" Text="{Binding Path=CurrentSetting.ImportFilePath}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <i:InvokeCommandAction Command="{Binding UpdateValidSelectionFlagCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>

                    <Button Grid.Column="3" Command="{Binding SelectFileCommand}" Content="..." />
                    <Button Grid.Column="2" Command="{Binding RefreshFileCommand}">
                        <DockPanel>
                            <Image Source="/Resources/refresh_16.ico" />
                        </DockPanel>
                    </Button>
                    <Button Grid.Column="4" Command="{Binding OpenExcelFileCommand}">
                        <DockPanel>
                            <Image Source="/Resources/fileopen16.ico" />
                        </DockPanel>
                    </Button>
                </Grid>
            </Grid>
        </GroupBox>

        <!--Design results DataGrid-->
        <GroupBox Grid.Row="2" Header="Design Results" Margin="5">
            <DataGrid Name="CardGridControl" ItemsSource="{Binding Path=DesignResults, Mode=TwoWay}"
                      SelectedItem="{Binding Path=CurrentDesignResult, Mode=TwoWay}" AutoGenerateColumns="False">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <DataGrid.Columns>
                    <DataGridTextColumn Header="Guid" Binding="{Binding Guid}" Visibility="Hidden" />
                    <DataGridTextColumn Header="Mark" Binding="{Binding Mark}" />
                    <DataGridTextColumn Header="Footing Name" Binding="{Binding FootingName}" SortDirection="Ascending" />
                    <DataGridTextColumn Header="Btm X Steel"
                                        Binding="{Binding BottomXSteel, Converter={StaticResource TsAreaConverter}}" />
                    <DataGridTextColumn Header="Bottom Z Steel"
                                        Binding="{Binding BottomZSteel, Converter={StaticResource TsAreaConverter}}" />
                    <DataGridTextColumn Header="Top X Steel"
                                        Binding="{Binding TopXSteel, Converter={StaticResource TsAreaConverter}}" />
                    <DataGridTextColumn Header="Top Z Steel"
                                        Binding="{Binding TopZSteel, Converter={StaticResource TsAreaConverter}}" />
                    <DataGridTextColumn Header="Rebar Grade" Binding="{Binding RebarGrade}" />
                    <DataGridTextColumn Header="Pilaster Vertical Qty" Binding="{Binding LongBarQty}" />
                    <DataGridTextColumn Header="Pilaster Vertical Size" Binding="{Binding LongBarSize}" />
                    <DataGridTextColumn Header="Stirrup Size" Binding="{Binding TransBarSize}" />
                    <DataGridTextColumn Header="Stirrup Spacing"
                                        Binding="{Binding TransBarSpacing, Converter={StaticResource TsLengthConverter}}" />
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>

        <!--Command Run buttons-->
        <GroupBox Grid.Row="3" Header="Process" Margin="5" VerticalAlignment="Bottom"
                  IsEnabled="{Binding SelectionValid, Mode=OneWay}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!--Status bar and commands-->
                <Grid Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="60" />
                    </Grid.ColumnDefinitions>

                    <ProgressBar Height="16" Grid.Column="0" Minimum="0" Maximum="{Binding ProgressProxy.ProgressMax}"
                                 Value="{Binding ProgressProxy.ProgressValue}"
                                 Visibility="{Binding IsBusy, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                 IsIndeterminate="{Binding ProgressProxy.IsProgressIndeterminate, Mode=OneWay}" />
                    <TextBlock Grid.Column="1" Text="{Binding ProgressProxy.ProgressText}" VerticalAlignment="Center"
                               TextTrimming="CharacterEllipsis" />
                </Grid>

                <Button Grid.Column="1" Content="Import for Selected" Margin="3" Padding="5"
                        Command="{Binding CreateFromSelectedCommand}" />
                <Button Grid.Column="2" Content="Import for All" Margin="3" Padding="5"
                        Command="{Binding CreateFromAllCommand}" />
            </Grid>
        </GroupBox>

        <!--Status bar-->
        <GroupBox Header="Status" Grid.Row="4" Margin="5" VerticalAlignment="Bottom">
            <Button Content="{Binding Path=StatusText, Mode=OneWay}" Margin="7" Padding="5"
                    Style="{StaticResource BtnHightlightOff}" />
        </GroupBox>

    </Grid>
</Window>